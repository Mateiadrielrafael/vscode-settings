[["%",{"text":"src/Repl.purs","registerMode":1}],["*",{"text":"","registerMode":2}],["-",{"text":" ","registerMode":1}],["1",{"text":"","registerMode":2}],["2",{"text":"    pure undefined","registerMode":2}],["3",{"text":"    let a = ?w","registerMode":2}],["4",{"text":"import Prelude","registerMode":2}],["5",{"text":"(input: string) => {\n  const parser = new Parser(grammar);\n\n  parser.feed(input);\n\n  return parser.results[0];\n};\n","registerMode":1}],["6",{"text":"            let a = ?w","registerMode":2}],["7",{"text":"        _ -> loop state","registerMode":2}],["8",{"text":"import Node.FS.Async (readTextFile)","registerMode":2}],["9",{"text":"    let ","registerMode":2}],["0",{"text":"parse :: String -> Either ParsingError (Array Rule)\nparse = catchErrors parseImpl","registerMode":2}],["/",{"text":"over","registerMode":0}],["#",{"text":"src/Expression.purs","registerMode":1}]]