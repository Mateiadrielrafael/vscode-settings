[["%",{"text":"/home/adrielus/.config/Code/User/globalStorage/arnohovhannisyan.syncify/conflicts/0.7630668781211742-.registers","registerMode":1}],["*",{"text":"import Io (class Io, handleIo)","registerMode":2}],["-",{"text":"foreign import ","registerMode":1}],["1",{"text":"","registerMode":2}],["2",{"text":"  -- Test laziness","registerMode":2}],["3",{"text":"  -- reader","registerMode":2}],["4",{"text":"  let result'' = handleAsk 3 something2 ","registerMode":2}],["5",{"text":"something2 :: Ask Int => Int\nsomething2 = Ask.do\n  let a = 3\n  let b = trace (show (Ask.ask :: Int)) \\_ -> unit\n  Ask.ask * a","registerMode":2}],["6",{"text":"-- foreign import handleAsk :: forall a ctx. ctx -> (Ask ctx => a) -> a","registerMode":2}],["7",{"text":"exports.handleAsk = (c) => (f) => f({ ctx: c });","registerMode":2}],["8",{"text":"ask = (unsafeCoerce \\d -> d.ctx) :: (forall ctx. Ask ctx => ctx )","registerMode":2}],["9",{"text":"ask :: forall ctx. ((Ask ctx) => ctx)","registerMode":2}],["0",{"text":"something :: Ask Int => Io => Int\nsomething = Abilities.do\n  let a = 3\n\n  Io.assert $ a + 1 == 4\n  Io.debugLog $ show a\n\n  -- Let works just as well\n  b <- Io.readFile \"b.txt\"\n\n  Io.debugLog $ Io.readFile \"a.txt\" <> \"!!\"\n  Io.debugLog b\n\n  a + Ask.ask * 2\n\nmain :: Effect Unit\nmain = do\n  result <- handleAsk 3 $ handleIo something\n  result' <- handleAsk 5 $ handleIo something\n  logShow [result, result']\n","registerMode":2}],["/",{"text":"\\bCDeclaration\\b","registerMode":0}],["#",{"text":"src/Main.purs","registerMode":1}]]