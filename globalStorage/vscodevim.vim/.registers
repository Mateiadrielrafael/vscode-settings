[["%",{"text":"","registerMode":0}],["*",{"text":"","registerMode":2}],["-",{"text":"d","registerMode":1}],["1",{"text":"","registerMode":2}],["2",{"text":"// Learn more about F# at http://docs.microsoft.com/dotnet/fsharp","registerMode":2}],["3",{"text":"","registerMode":2}],["4",{"text":"open System","registerMode":2}],["5",{"text":"                        Raylib.DrawRectangleLines(\r\n                            x + padding,\r\n                            y + padding,\r\n                            tileSize - 2 * padding,\r\n                            tileSize - 2 * padding,\r\n                            Color.BLUE\r\n                        )","registerMode":2}],["6",{"text":"\r\n                let nextPosition =\r\n                    if i = 0 then\r\n                        nextBelt.items.ToArray()\r\n                        |> Array.tryLast\r\n                        |> Option.defaultValue beltSize\r\n                        |> (+) beltSize\r\n                    else\r\n                        belt.items.[i - 1]\r\n\r\n                let itemSize = beltSize / double config.capacity\r\n                let maxPosition = nextPosition - itemSize\r\n                let actualPosition = min maxPosition <| item + config.speed\r\n\r\n                if actualPosition >= double beltSize then\r\n                    belt.items.RemoveAt i\r\n                    nextBelt.items.Add <| actualPosition - beltSize\r\n                    i <- i - 1\r\n                else\r\n                    belt.items.[i] <- actualPosition\r\n","registerMode":2}],["7",{"text":"","registerMode":2}],["8",{"text":"","registerMode":2}],["9",{"text":"","registerMode":2}],["0",{"text":"    addTile world (1, 1) { id = 2; piece = (0, 0) }\r\n\r\n    addMachine world 2\r\n    <| Machine(\r\n        0,\r\n        Belt\r\n            { direction = Down\r\n              items = ResizeArray() }\r\n    )\r\n\r\n    BeltPaths.addBelt beltPathState world (1, 1)","registerMode":2}],["/",{"text":"\\bCDeclaration\\b","registerMode":0}]]